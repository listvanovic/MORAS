CHIP RoundToPow {
    IN in[16];
    OUT out[16];

    PARTS:
    //identificirati najviši bit ulaznog broja koji je najveća potencija broja 2 <= od ulaznog broja
    Mux16(a = false, b[0] = true, b[1..15] = false, sel = in[0], out = y0);
    Mux16(a = y0, b[1] = true, b[0] = false, b[2..15] = false, sel = in[1], out = y1);
    Mux16(a = y1, b[2] = true, b[0..1] = false, b[3..15] = false, sel = in[2], out = y2);
    Mux16(a = y2, b[3] = true, b[0..2] = false, b[4..15] = false, sel = in[3], out = y3);
    Mux16(a = y3, b[4] = true, b[0..3] = false, b[5..15] = false, sel = in[4], out = y4);
    Mux16(a = y4, b[5] = true, b[0..4] = false, b[6..15] = false, sel = in[5], out = y5);
    Mux16(a = y5, b[6] = true, b[0..5] = false, b[7..15] = false, sel = in[6], out = y6);
    Mux16(a = y6, b[7] = true, b[0..6] = false, b[8..15] = false, sel = in[7], out = y7);
    Mux16(a = y7, b[8] = true, b[0..7] = false, b[9..15] = false, sel = in[8], out = y8);
    Mux16(a = y8, b[9] = true, b[0..8] = false, b[10..15] = false, sel = in[9], out = y9);
    Mux16(a = y9, b[10] = true, b[0..9] = false, b[11..15] = false, sel = in[10], out = y10);
    Mux16(a = y10, b[11] = true, b[0..10] = false, b[12..15] = false, sel = in[11], out = y11);
    Mux16(a = y11, b[12] = true, b[0..11] = false, b[13..15] = false, sel = in[12], out = y12);
    Mux16(a = y12, b[13] = true, b[0..12] = false, b[14..15] = false, sel = in[13], out = y13);
    Mux16(a = y13, b[14] = true, b[0..13] = false, b[15] = false, sel = in[14], out = y14);
    Mux16(a = y14, b[15] = true, b[0..14] = false, sel = in[15], out = Out);
}
